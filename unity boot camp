# 23.09.21

online c# compiler

웹 관련 공부

기타 프로그래밍 전반적인 작업

**<C# 프로그래밍 코드의 기본구성>**

주석=내용 전달, 많을수록 무거워짐, //다음 문장 작성

1줄 기준으로 주석이 처리된다.

ex)라이센스, 로직가이드

**using** = System에 대한 내용을 프로그램 코드에서 **사용하겠습니다.**

프로그램 코드 내에서 ㅁ에 대한 값들을 사용하겠다는 의미.

public class helloworld : 파일의 이름

클래스는 C# 파일의 기본 단위

프래그램 내에서 사용되는 데이터 객체에 대한 틀

public static void main(string [] args) :

일반 C#에서 프로그램 코드가 실행되는 영역

consol .writeLine : 문장 **출력**용 코드 Line은 작업 후 띄어쓰기

consol .ReadLine : **문장 입력용 코드**

int.Parse(변경할 내용) : 해당 데이터 형태로 변환하는 기능

**-2교시**

**변수(variables)**

수치나 문자 등을 저장해 두는 상자

정의) 하나의 **데이터를 저장**하기 위해 사용자가 이름을 부여(할당)한 저장 공간=이름 지어준 공간

*왜 굳이 변수에 이름을 붙여야 하나?

정보를 식별하기 위해

데이터를 쉽게 파악하기 위해

int = 숫자를 표현하는 것.

자료형(Type) : 컴퓨터가 데이터를 판단하는 기준

**자주 쓰이는 자료형**

int : 정수형, 소수점 없는 딱 맞는

float ; 실수형 , 소수점 포함하고 있는, 소수점 6자리 까지는 나름 정확하게 계산되어있음.

→실제 계산값과 안 맞을 수도 있다. 약간씩 오차가 날 수 밖에 없다.

bool :  논리형, 프로그램 내에서 참과 거짓을 판단하는 데이터

string 문장데이터 변수 : 문자형 클래스(하나의 틀), 프로그램 내에서 문장에 대한 표현을 진행할 수 있고, 문장에 관련된 기능들을 가지고 있다.

변수의 생성 규칙

1. 이름 길이에 대한 제한은 따로 없으나, 최대한 알아보기 쉽게 직관적으로 적는게 일반적입니다. (암묵적인 룰)
2. 변수의 이름으로 앞에 숫자가 나올 수 없습니다.
3. 변수의 이름으로 특수문자를 사용할 수 없습니다. (단 일부 예외는 존재, 언더바_)
4. 변수의 이름으로 *키워드를 사용할 수 없습니다.

*키워드란 영단어로 된 기능을 가진 것들 ex) int

if(조건식)

{

조건식의 결과가 만족 할 대 실행할 명령문;

}
else if(조건식2)

{

위의 조건식의 결과가 만족하지 않고, 새로운 조건식2의 결과가 만족하는 경우 실행할 명령문

}

else

{

위에 있는 ifm else if 문의 모든 조건이 만족하지 않는 경우 실행할 명령문;

}

조건식에서 사용되는 연산자

a > b

a < b

a ≥ b

a ≤ b

a ==b (a와 b가 서로 같습니다.)

a ≠ b (a와 b가 서로 다릅니다.)
